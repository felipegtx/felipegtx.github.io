{
    "project": {
        "name": "Raska",
        "url": "https://github.com/felipegtx/Raska",
        "version": "v1.0.0-beta-5"
    },
    "files": {
        "src\\raska.animation.js": {
            "name": "src\\raska.animation.js",
            "modules": {
                "animation": 1
            },
            "classes": {
                "AnimationChainController": 1,
                "PublicControllerInterface": 1
            },
            "fors": {
                "PublicControllerInterface": 1
            },
            "namespaces": {}
        },
        "src\\raska.js": {
            "name": "src\\raska.js",
            "modules": {
                "raska": 1,
                "_helpers": 1,
                "_defaultConfigurations": 1
            },
            "classes": {
                "$device": 1,
                "$log": 1,
                "$obj": 1,
                "_graphNodeInfo": 1,
                "_basicElement": 1,
                "label": 1,
                "square": 1,
                "arrow": 1,
                "htmlElement": 1,
                "triangle": 1,
                "circle": 1,
                "_drawing": 1,
                "_mouse": 1,
                "staticCoordinates": 1,
                "_elementBeingDraged": 1,
                "_public": 1
            },
            "fors": {
                "_drawing": 1,
                "_mouse": 1,
                "_elementBeingDraged": 1
            },
            "namespaces": {}
        }
    },
    "modules": {
        "raska": {
            "name": "raska",
            "submodules": {
                "animation": 1,
                "_helpers": 1,
                "_defaultConfigurations": 1
            },
            "elements": {
                "moving": 1
            },
            "classes": {
                "AnimationChainController": 1,
                "PublicControllerInterface": 1,
                "$device": 1,
                "$log": 1,
                "$obj": 1,
                "_graphNodeInfo": 1,
                "_basicElement": 1,
                "label": 1,
                "square": 1,
                "arrow": 1,
                "htmlElement": 1,
                "triangle": 1,
                "circle": 1,
                "_drawing": 1,
                "_mouse": 1,
                "staticCoordinates": 1,
                "_elementBeingDraged": 1,
                "_public": 1
            },
            "fors": {
                "PublicControllerInterface": 1,
                "_drawing": 1,
                "_mouse": 1,
                "_elementBeingDraged": 1
            },
            "namespaces": {},
            "tag": "module",
            "file": "src\\raska.js",
            "line": 2237,
            "description": "The basic shape of an Raska element",
            "itemtype": "main",
            "access": "private",
            "tagname": "",
            "default": "null"
        },
        "animation": {
            "name": "animation",
            "submodules": {},
            "elements": {},
            "classes": {
                "AnimationChainController": 1,
                "PublicControllerInterface": 1
            },
            "fors": {
                "PublicControllerInterface": 1
            },
            "is_submodule": 1,
            "namespaces": {},
            "module": "raska",
            "namespace": "",
            "file": "src\\raska.animation.js",
            "line": 256,
            "description": "HTML5 canvas visual directed graph creation tool",
            "tag": "main",
            "itemtype": "main"
        },
        "_helpers": {
            "name": "_helpers",
            "submodules": {},
            "elements": {},
            "classes": {
                "$device": 1,
                "$log": 1,
                "$obj": 1,
                "_graphNodeInfo": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "raska",
            "namespace": "",
            "file": "src\\raska.js",
            "line": 350,
            "description": "An utility that wraps the commom taks to avoid code repetition"
        },
        "_defaultConfigurations": {
            "name": "_defaultConfigurations",
            "submodules": {},
            "elements": {},
            "classes": {
                "_basicElement": 1,
                "label": 1,
                "square": 1,
                "arrow": 1,
                "htmlElement": 1,
                "triangle": 1,
                "circle": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "raska",
            "namespace": "",
            "file": "src\\raska.js",
            "line": 1520,
            "description": "A utility container that holds default instance information for the Raska library",
            "access": "private",
            "tagname": "",
            "readonly": ""
        }
    },
    "classes": {
        "AnimationChainController": {
            "name": "AnimationChainController",
            "shortname": "AnimationChainController",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "raska",
            "submodule": "animation",
            "namespace": "",
            "file": "src\\raska.animation.js",
            "line": 86,
            "description": "Controller for the animation routines",
            "is_constructor": 1
        },
        "PublicControllerInterface": {
            "name": "PublicControllerInterface",
            "shortname": "PublicControllerInterface",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "raska",
            "submodule": "animation",
            "namespace": "",
            "file": "src\\raska.animation.js",
            "line": 256,
            "description": "The public interface for the animation controller module",
            "params": [
                {
                    "name": "targetElement",
                    "description": "The element we want to animate",
                    "type": "_basicElement"
                }
            ],
            "is_constructor": 1
        },
        "$device": {
            "name": "$device",
            "shortname": "$device",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "raska",
            "submodule": "_helpers",
            "namespace": "",
            "file": "src\\raska.js",
            "line": 35,
            "description": "Device related helpers",
            "static": 1
        },
        "$log": {
            "name": "$log",
            "shortname": "$log",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "raska",
            "submodule": "_helpers",
            "namespace": "",
            "file": "src\\raska.js",
            "line": 105,
            "description": "Outputs messages to the 'console'",
            "static": 1
        },
        "$obj": {
            "name": "$obj",
            "shortname": "$obj",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "raska",
            "submodule": "_helpers",
            "namespace": "",
            "file": "src\\raska.js",
            "line": 139,
            "description": "Handles commom prototype element' tasks",
            "static": 1
        },
        "_graphNodeInfo": {
            "name": "_graphNodeInfo",
            "shortname": "_graphNodeInfo",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "raska",
            "submodule": "_helpers",
            "namespace": "",
            "file": "src\\raska.js",
            "line": 350,
            "description": "Gathers all elements being ploted to the canvas and organizes it as a directed graph JSON",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "nodeElement",
                    "description": "Element whose dependencies we're about to transpose searching for links",
                    "type": "_basicElement"
                },
                {
                    "name": "parentNode",
                    "description": "The parent no to this element",
                    "type": "_graphNodeInfo"
                },
                {
                    "name": "links",
                    "description": "The linked data to this element",
                    "type": "Array"
                }
            ]
        },
        "_basicElement": {
            "name": "_basicElement",
            "shortname": "_basicElement",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "raska",
            "submodule": "_defaultConfigurations",
            "namespace": "",
            "file": "src\\raska.js",
            "line": 471,
            "description": "The basic shape of an Raska element",
            "access": "private",
            "tagname": ""
        },
        "label": {
            "name": "label",
            "shortname": "label",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "raska",
            "submodule": "_defaultConfigurations",
            "namespace": "",
            "file": "src\\raska.js",
            "line": 1171,
            "description": "Creates a label",
            "extends": "_basicElement"
        },
        "square": {
            "name": "square",
            "shortname": "square",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "raska",
            "submodule": "_defaultConfigurations",
            "namespace": "",
            "file": "src\\raska.js",
            "line": 1217,
            "description": "Creates a square",
            "extends": "_basicElement"
        },
        "arrow": {
            "name": "arrow",
            "shortname": "arrow",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "raska",
            "submodule": "_defaultConfigurations",
            "namespace": "",
            "file": "src\\raska.js",
            "line": 1281,
            "description": "Creates an arrow",
            "extends": "_basicElement"
        },
        "htmlElement": {
            "name": "htmlElement",
            "shortname": "htmlElement",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "raska",
            "submodule": "_defaultConfigurations",
            "namespace": "",
            "file": "src\\raska.js",
            "line": 1389,
            "description": "Wraps any HTML element as a Raska element",
            "is_constructor": 1,
            "extends": "_basicElement"
        },
        "triangle": {
            "name": "triangle",
            "shortname": "triangle",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "raska",
            "submodule": "_defaultConfigurations",
            "namespace": "",
            "file": "src\\raska.js",
            "line": 1430,
            "description": "Creates a triangle.",
            "extends": "_basicElement"
        },
        "circle": {
            "name": "circle",
            "shortname": "circle",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "raska",
            "submodule": "_defaultConfigurations",
            "namespace": "",
            "file": "src\\raska.js",
            "line": 1520,
            "description": "Creates a cricle.",
            "extends": "_basicElement"
        },
        "_drawing": {
            "name": "_drawing",
            "shortname": "_drawing",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "raska",
            "namespace": "",
            "file": "src\\raska.js",
            "line": 1641,
            "description": "An utility container that holds all the drawing related implementations",
            "readonly": "",
            "static": 1
        },
        "_mouse": {
            "name": "_mouse",
            "shortname": "_mouse",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "raska",
            "namespace": "",
            "file": "src\\raska.js",
            "line": 1735,
            "description": "A utility that detects mouse's relative position on the canvas",
            "static": 1
        },
        "staticCoordinates": {
            "name": "staticCoordinates",
            "shortname": "staticCoordinates",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "raska",
            "namespace": "",
            "file": "src\\raska.js",
            "line": 1770,
            "description": "Gathers the mouse coordinates without the need of an event bubble",
            "static": 1
        },
        "_elementBeingDraged": {
            "name": "_elementBeingDraged",
            "shortname": "_elementBeingDraged",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "raska",
            "namespace": "",
            "file": "src\\raska.js",
            "line": 1807,
            "description": "A utility that tracks the state of the element being draged (if any)"
        },
        "_public": {
            "name": "_public",
            "shortname": "_public",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "raska",
            "namespace": "",
            "file": "src\\raska.js",
            "line": 2237,
            "description": "All public avaliable methods from the Raska library"
        }
    },
    "elements": {
        "moving": {
            "name": "moving",
            "attributes": [],
            "module": "raska",
            "file": "src\\raska.js",
            "line": 1859,
            "description": "The element is being moved",
            "parents": "dragTypes"
        }
    },
    "classitems": [
        {
            "file": "src\\raska.animation.js",
            "line": 41,
            "description": "Executes a given delegate whenever possible",
            "itemtype": "method",
            "name": "execute",
            "params": [
                {
                    "name": "what",
                    "description": "The delegate whe want to execute",
                    "type": "Function"
                }
            ],
            "static": 1,
            "class": "AnimationChainController",
            "module": "raska",
            "submodule": "animation"
        },
        {
            "file": "src\\raska.animation.js",
            "line": 58,
            "description": "Handles the periodic draw of the elements in this Raska instance",
            "itemtype": "method",
            "name": "animate",
            "chainable": 1,
            "static": 1,
            "class": "AnimationChainController",
            "module": "raska",
            "submodule": "animation"
        },
        {
            "file": "src\\raska.animation.js",
            "line": 67,
            "description": "Resets changed element attributes to the default value",
            "itemtype": "method",
            "name": "resetElement",
            "chainable": 1,
            "static": 1,
            "class": "AnimationChainController",
            "module": "raska",
            "submodule": "animation"
        },
        {
            "file": "src\\raska.animation.js",
            "line": 76,
            "description": "Stops the current animation",
            "itemtype": "method",
            "name": "stop",
            "chainable": 1,
            "static": 1,
            "class": "AnimationChainController",
            "module": "raska",
            "submodule": "animation"
        },
        {
            "file": "src\\raska.animation.js",
            "line": 104,
            "description": "Registers a given animation object to be called",
            "itemtype": "method",
            "name": "register",
            "params": [
                {
                    "name": "animation",
                    "description": "Animation spec instance",
                    "type": "raska.baseAnimation"
                }
            ],
            "chainable": 1,
            "static": 1,
            "class": "AnimationChainController",
            "module": "raska",
            "submodule": "animation"
        },
        {
            "file": "src\\raska.animation.js",
            "line": 123,
            "description": "Clears all saved states from the chain",
            "itemtype": "method",
            "name": "stop",
            "chainable": 1,
            "static": 1,
            "class": "AnimationChainController",
            "module": "raska",
            "submodule": "animation"
        },
        {
            "file": "src\\raska.animation.js",
            "line": 148,
            "description": "Saves the initial states for all animations handled by this chain",
            "itemtype": "method",
            "name": "saveStates",
            "chainable": 1,
            "static": 1,
            "class": "AnimationChainController",
            "module": "raska",
            "submodule": "animation"
        },
        {
            "file": "src\\raska.animation.js",
            "line": 160,
            "description": "Restores the animations from its initial saved state",
            "itemtype": "method",
            "name": "restoreFromSavedState",
            "chainable": 1,
            "static": 1,
            "class": "AnimationChainController",
            "module": "raska",
            "submodule": "animation"
        },
        {
            "file": "src\\raska.animation.js",
            "line": 176,
            "description": "Executes a destructive navigation/execution on all registered animations in this chain",
            "itemtype": "method",
            "name": "execute",
            "params": [
                {
                    "name": "then",
                    "description": "What to do after all animations are done",
                    "type": "Function"
                },
                {
                    "name": "interval",
                    "description": "Interval between animations",
                    "type": "Number"
                }
            ],
            "chainable": 1,
            "static": 1,
            "class": "AnimationChainController",
            "module": "raska",
            "submodule": "animation"
        },
        {
            "file": "src\\raska.animation.js",
            "line": 205,
            "description": "Executes all current animations in loop",
            "itemtype": "method",
            "name": "execute",
            "params": [
                {
                    "name": "then",
                    "description": "What to do after all animations are done",
                    "type": "Function"
                },
                {
                    "name": "interval",
                    "description": "Interval between animations",
                    "type": "Number"
                }
            ],
            "chainable": 1,
            "static": 1,
            "class": "AnimationChainController",
            "module": "raska",
            "submodule": "animation"
        },
        {
            "file": "src\\raska.animation.js",
            "line": 224,
            "description": "Controls the execution of the animation loop",
            "itemtype": "method",
            "name": "_looper",
            "access": "private",
            "tagname": "",
            "static": 1,
            "class": "AnimationChainController",
            "module": "raska",
            "submodule": "animation"
        },
        {
            "file": "src\\raska.animation.js",
            "line": 268,
            "description": "Executes a fadein effect on a given element",
            "itemtype": "method",
            "name": "fadeIn",
            "params": [
                {
                    "name": "stepIncrement",
                    "description": "The speed the animation executes",
                    "type": "Number"
                }
            ],
            "static": 1,
            "chainable": 1,
            "class": "PublicControllerInterface",
            "module": "raska",
            "submodule": "animation"
        },
        {
            "file": "src\\raska.animation.js",
            "line": 341,
            "description": "Executes a fadeOut effect on a given element",
            "itemtype": "method",
            "name": "fadeIn",
            "params": [
                {
                    "name": "stepIncrement",
                    "description": "The speed the animation executes",
                    "type": "Number"
                }
            ],
            "static": 1,
            "chainable": 1,
            "class": "PublicControllerInterface",
            "module": "raska",
            "submodule": "animation"
        },
        {
            "file": "src\\raska.animation.js",
            "line": 413,
            "description": "Moves a given element around (within canvas' boundaries)",
            "itemtype": "method",
            "name": "move",
            "params": [
                {
                    "name": "configuration",
                    "description": "How to move the element around",
                    "type": "Function"
                }
            ],
            "static": 1,
            "chainable": 1,
            "class": "PublicControllerInterface",
            "module": "raska",
            "submodule": "animation"
        },
        {
            "file": "src\\raska.animation.js",
            "line": 471,
            "description": "A simple fluent helper to assist in the construct of a better coding\nwhen animating elements",
            "itemtype": "method",
            "name": "then",
            "static": 1,
            "chainable": 1,
            "class": "PublicControllerInterface",
            "module": "raska",
            "submodule": "animation"
        },
        {
            "file": "src\\raska.animation.js",
            "line": 499,
            "description": "Executes the current chain of animations",
            "itemtype": "method",
            "name": "execute",
            "static": 1,
            "chainable": 1,
            "class": "PublicControllerInterface",
            "module": "raska",
            "submodule": "animation"
        },
        {
            "file": "src\\raska.animation.js",
            "line": 512,
            "description": "Executes the current chain of animations (in loop)",
            "itemtype": "method",
            "name": "loop",
            "params": [
                {
                    "name": "interval",
                    "description": "The interval between executions of each animation",
                    "type": "Number"
                }
            ],
            "static": 1,
            "chainable": 1,
            "class": "PublicControllerInterface",
            "module": "raska",
            "submodule": "animation"
        },
        {
            "file": "src\\raska.animation.js",
            "line": 526,
            "description": "Enables the feature of saving the initial state for each animations",
            "itemtype": "method",
            "name": "saveInitialStates",
            "static": 1,
            "chainable": 1,
            "class": "PublicControllerInterface",
            "module": "raska",
            "submodule": "animation"
        },
        {
            "file": "src\\raska.animation.js",
            "line": 539,
            "description": "Stops any active loop animation and clear all saved states up until this point",
            "itemtype": "method",
            "name": "stop",
            "static": 1,
            "chainable": 1,
            "class": "PublicControllerInterface",
            "module": "raska",
            "submodule": "animation"
        },
        {
            "file": "src\\raska.js",
            "line": 50,
            "description": "Whether or not to the current devide is touchscreen",
            "itemtype": "property",
            "name": "isTouch",
            "type": "Bool",
            "class": "$device",
            "module": "raska",
            "submodule": "_helpers"
        },
        {
            "file": "src\\raska.js",
            "line": 58,
            "description": "Gathers UI iteraction X/Y coordinates from an event",
            "itemtype": "method",
            "name": "info",
            "params": [
                {
                    "name": "container",
                    "description": "The element that contains the bounding rect we'll use to gather relative positioning data",
                    "type": "HTMLElement"
                },
                {
                    "name": "evt",
                    "description": "The event we're extracting information from",
                    "type": "Event"
                }
            ],
            "return": {
                "description": "Values",
                "type": "X,y"
            },
            "class": "$device",
            "module": "raska",
            "submodule": "_helpers"
        },
        {
            "file": "src\\raska.js",
            "line": 81,
            "description": "Registers a delegate to a given element event",
            "itemtype": "method",
            "name": "info",
            "params": [
                {
                    "name": "targetElement",
                    "description": "The element that we're interested in",
                    "type": "HTMLElement"
                },
                {
                    "name": "iteractionType",
                    "description": "The event name",
                    "type": "String"
                },
                {
                    "name": "triggerWrapper",
                    "description": "The delegate",
                    "type": "Function"
                }
            ],
            "chainable": 1,
            "class": "$device",
            "module": "raska",
            "submodule": "_helpers"
        },
        {
            "file": "src\\raska.js",
            "line": 115,
            "description": "Whether or not to actually log the messages (should be 'false' in production code)",
            "itemtype": "property",
            "name": "active",
            "type": "Bool",
            "default": "false",
            "class": "$log",
            "module": "raska",
            "submodule": "_helpers"
        },
        {
            "file": "src\\raska.js",
            "line": 124,
            "description": "Prints an informational message to the console",
            "itemtype": "method",
            "name": "info",
            "params": [
                {
                    "name": "msg",
                    "description": "The message to be shown",
                    "type": "String"
                },
                {
                    "name": "o",
                    "description": "Any extra message data",
                    "type": "Any"
                }
            ],
            "class": "$log",
            "module": "raska",
            "submodule": "_helpers"
        },
        {
            "file": "src\\raska.js",
            "line": 180,
            "description": "Executes a given delegate for each item in the collection",
            "itemtype": "method",
            "name": "forEach",
            "params": [
                {
                    "name": "arr",
                    "description": "The array that need to be enumerated",
                    "type": "Array"
                },
                {
                    "name": "what",
                    "description": "What to do to a given item (obj item, number index)",
                    "type": "Delegate"
                }
            ],
            "return": {
                "description": "Array of data acquired during array enumaration"
            },
            "class": "$obj",
            "module": "raska",
            "submodule": "_helpers"
        },
        {
            "file": "src\\raska.js",
            "line": 198,
            "description": "Whether or not a given object type is of the type you expect (typeof)",
            "itemtype": "method",
            "name": "is",
            "params": [
                {
                    "name": "obj",
                    "description": "The object we whant to know about",
                    "type": "Object"
                },
                {
                    "name": "what",
                    "description": "The string representing the name of the type",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Whether or not the object matches the specified type",
                "type": "Bool"
            },
            "class": "$obj",
            "module": "raska",
            "submodule": "_helpers"
        },
        {
            "file": "src\\raska.js",
            "line": 210,
            "description": "Whether or not a given object type is of the type you expect (constructor call)",
            "itemtype": "method",
            "name": "isType",
            "params": [
                {
                    "name": "obj",
                    "description": "The object we whant to know about",
                    "type": "Object"
                },
                {
                    "name": "typeName",
                    "description": "The string representing the name of the type",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Whether or not the object matches the specified type",
                "type": "Bool"
            },
            "class": "$obj",
            "module": "raska",
            "submodule": "_helpers"
        },
        {
            "file": "src\\raska.js",
            "line": 222,
            "description": "Generates a pseudo-random Id",
            "itemtype": "method",
            "name": "generateId",
            "return": {
                "description": "A pseudo-random Id",
                "type": "String"
            },
            "class": "$obj",
            "module": "raska",
            "submodule": "_helpers"
        },
        {
            "file": "src\\raska.js",
            "line": 233,
            "description": "Whether or not a given object type is valid to be handled",
            "itemtype": "method",
            "name": "isValid",
            "params": [
                {
                    "name": "obj",
                    "description": "The object we whant to know if it's valid to be handled",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Whether or not the object is valid to be handled",
                "type": "Bool"
            },
            "class": "$obj",
            "module": "raska",
            "submodule": "_helpers"
        },
        {
            "file": "src\\raska.js",
            "line": 244,
            "description": "Whether or not a given object is an Array",
            "itemtype": "method",
            "name": "isArray",
            "params": [
                {
                    "name": "obj",
                    "description": "The object we whant to know is it's valid to be handled",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Whether or not the object is valid to be handled",
                "type": "Bool"
            },
            "class": "$obj",
            "module": "raska",
            "submodule": "_helpers"
        },
        {
            "file": "src\\raska.js",
            "line": 255,
            "description": "Whether or not a given object type is undefined",
            "itemtype": "method",
            "name": "isUndefined",
            "params": [
                {
                    "name": "obj",
                    "description": "The object we whant to know if it's undefined",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Whether or not the object is undefined",
                "type": "Bool"
            },
            "class": "$obj",
            "module": "raska",
            "submodule": "_helpers"
        },
        {
            "file": "src\\raska.js",
            "line": 266,
            "description": "Serializes a given _basicElement array to a JSON string",
            "itemtype": "method",
            "name": "deconstruct",
            "params": [
                {
                    "name": "basicElementArray",
                    "description": "The array of _basicElement we're going to work with",
                    "type": "_basicElement[]"
                }
            ],
            "return": {
                "description": "The corresponding string",
                "type": "String"
            },
            "class": "$obj",
            "module": "raska",
            "submodule": "_helpers"
        },
        {
            "file": "src\\raska.js",
            "line": 281,
            "description": "Tries to recreate a previously serialized object into a new raska instance",
            "itemtype": "method",
            "name": "recreate",
            "params": [
                {
                    "name": "jsonElement",
                    "description": "The JSON representation of a raska object",
                    "type": "JSON"
                }
            ],
            "return": {
                "description": "The recreated element or null if the element type is invalid",
                "type": "_basicElement"
            },
            "class": "$obj",
            "module": "raska",
            "submodule": "_helpers"
        },
        {
            "file": "src\\raska.js",
            "line": 301,
            "description": "Recreate all links of the object",
            "itemtype": "method",
            "name": "recreate",
            "class": "$obj",
            "module": "raska",
            "submodule": "_helpers"
        },
        {
            "file": "src\\raska.js",
            "line": 319,
            "description": "Extends any object using a base template object as reference",
            "itemtype": "method",
            "name": "extend",
            "params": [
                {
                    "name": "baseObject",
                    "description": "The object we whant to copy from",
                    "type": "Object"
                },
                {
                    "name": "impl",
                    "description": "The object with the data we want use",
                    "type": "Object"
                },
                {
                    "name": "addNewMembers",
                    "description": "Whether or not we allow new members on the 'impl' object to be used in the result",
                    "type": "Bool"
                }
            ],
            "return": {
                "description": "Extended object",
                "type": "Object"
            },
            "class": "$obj",
            "module": "raska",
            "submodule": "_helpers"
        },
        {
            "file": "src\\raska.js",
            "line": 364,
            "description": "The element wraped by this node",
            "itemtype": "property",
            "name": "element",
            "type": "_basicElement",
            "final": 1,
            "class": "_graphNodeInfo",
            "module": "raska",
            "submodule": "_helpers"
        },
        {
            "file": "src\\raska.js",
            "line": 373,
            "description": "Whether or not this node has a parent element",
            "itemtype": "property",
            "name": "hasParent",
            "type": "bool",
            "final": 1,
            "class": "_graphNodeInfo",
            "module": "raska",
            "submodule": "_helpers"
        },
        {
            "file": "src\\raska.js",
            "line": 385,
            "description": "Tries to find a parent node compatible with the element passed as parameter",
            "itemtype": "method",
            "name": "getParentGraphNodeFor",
            "params": [
                {
                    "name": "bElement",
                    "description": "Element wraped by a parent node",
                    "type": "_basicElement"
                }
            ],
            "type": "_graphNodeInfo",
            "class": "_graphNodeInfo",
            "module": "raska",
            "submodule": "_helpers"
        },
        {
            "file": "src\\raska.js",
            "line": 430,
            "description": "The valid position types for a Raskel element",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_positionTypes",
            "static": 1,
            "final": 1,
            "class": "_graphNodeInfo",
            "module": "raska",
            "submodule": "_helpers"
        },
        {
            "file": "src\\raska.js",
            "line": 440,
            "description": "Element position will be relative to its parent (if any)",
            "itemtype": "property",
            "name": "relative",
            "type": "Number",
            "default": "50",
            "readonly": "",
            "class": "_graphNodeInfo",
            "module": "raska",
            "submodule": "_helpers"
        },
        {
            "file": "src\\raska.js",
            "line": 450,
            "description": "Element position will be absolute and will have no regard about its parent position whatsoever",
            "itemtype": "property",
            "name": "relative",
            "type": "Number",
            "default": "50",
            "readonly": "",
            "class": "_graphNodeInfo",
            "module": "raska",
            "submodule": "_helpers"
        },
        {
            "file": "src\\raska.js",
            "line": 481,
            "description": "A simple helper function to be used whenever this instance gets disable (if ever)",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "$disabled",
            "class": "_basicElement",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 490,
            "description": "Points to a parent Raska element (if any)",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "$parent",
            "default": "null",
            "class": "_basicElement",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 499,
            "description": "Points to a Raska element [as an arrow] (if any) related as a dependency from this node",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "$linksTo",
            "type": "_basicElement",
            "default": "[]",
            "class": "_basicElement",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 509,
            "description": "Points to a Raska element [as an arrow] (if any) that depends on this instance",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "$linksFrom",
            "type": "_basicElement",
            "default": "[]",
            "class": "_basicElement",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 519,
            "description": "Points to series of child Raska element (if any) that, usually, are contained inside this node",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "$childElements",
            "type": "_basicElement",
            "default": "[]",
            "class": "_basicElement",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 529,
            "description": "Clears all links that point to and from this Raska element",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "clearLinksFrom",
            "params": [
                {
                    "name": "source",
                    "description": "Object that defines the source of the link removal (start node)",
                    "type": "Object"
                },
                {
                    "name": "each",
                    "description": "Delegates that handle the process of removing the references",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Empty array",
                "type": "Array"
            },
            "class": "_basicElement",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 546,
            "description": "Just an empty attribute bag where you can save extra stuff that you need/want to serialize",
            "itemtype": "property",
            "name": "attr",
            "default": "\"{}\"",
            "type": "Object",
            "class": "_basicElement",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 555,
            "description": "The element name",
            "itemtype": "property",
            "name": "name",
            "default": "\"anonymous\"",
            "type": "String",
            "class": "_basicElement",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 564,
            "description": "The element type",
            "itemtype": "property",
            "name": "getType",
            "default": "_elementTypes.basic",
            "type": "_elementTypes",
            "class": "_basicElement",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 573,
            "description": "Wheter or not this element is part of the graph as a node",
            "itemtype": "property",
            "name": "graphNode",
            "default": "true",
            "type": "Bool",
            "class": "_basicElement",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 582,
            "description": "Allows to better check whether or not a new link can be created beteen two elements",
            "itemtype": "method",
            "name": "canLink",
            "params": [
                {
                    "name": "from",
                    "description": "Element that will be linked as a source",
                    "type": "_basicElement"
                },
                {
                    "name": "to",
                    "description": "Element that will be linked as a destination",
                    "type": "_basicElement"
                }
            ],
            "return": {
                "description": "Whether or not the link can be created",
                "type": "Bool"
            },
            "class": "_basicElement",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 597,
            "description": "Clears all references and child elements from this instance",
            "itemtype": "method",
            "name": "disable",
            "chainable": 1,
            "class": "_basicElement",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 620,
            "description": "Notifies a given element whenever (if ever) this element gets disabled",
            "itemtype": "method",
            "name": "notifyDisableStateOn",
            "chainable": 1,
            "class": "_basicElement",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 635,
            "description": "Handles element disabling notifications",
            "itemtype": "method",
            "name": "elementDisabledNotification",
            "chainable": 1,
            "class": "_basicElement",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 645,
            "description": "Whether or not this element can reach another element via a linked relation",
            "itemtype": "method",
            "name": "canReach",
            "return": {
                "description": "Whether or not a link exists",
                "type": "Bool"
            },
            "class": "_basicElement",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 662,
            "description": "Is this element passive of being linked at all?",
            "itemtype": "method",
            "name": "isLinkable",
            "return": {
                "description": "Whether or not a link can be created either from or to this element",
                "type": "Bool"
            },
            "class": "_basicElement",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 672,
            "description": "Is this element passive of being serialized at all?",
            "itemtype": "method",
            "name": "isSerializable",
            "return": {
                "description": "Whether or not this element is suposed to be serialized",
                "type": "Bool"
            },
            "class": "_basicElement",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 682,
            "description": "Creates a link between this and another element, using the later as a dependency of this instance",
            "itemtype": "method",
            "name": "addLinkTo",
            "params": [
                {
                    "name": "element",
                    "description": "Element that will be linked as a destination from this element node",
                    "type": "_basicElement"
                }
            ],
            "return": {
                "description": "Whether or not the link was added",
                "type": "Bool"
            },
            "class": "_basicElement",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 700,
            "description": "Links this element to another Raska element as this instance being the target node",
            "itemtype": "method",
            "name": "addLinkFrom",
            "params": [
                {
                    "name": "element",
                    "description": "Element that will be linked as a source from this element node",
                    "type": "_basicElement"
                }
            ],
            "return": {
                "description": "Whether or not the link was added",
                "type": "Bool"
            },
            "class": "_basicElement",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 718,
            "description": "Removes the dependency from this element to another Raska element",
            "itemtype": "method",
            "name": "removeLinkTo",
            "params": [
                {
                    "name": "element",
                    "description": "Element that will have its link to this element removed",
                    "type": "_basicElement"
                }
            ],
            "return": {
                "description": "Updated Raska element reference",
                "type": "_basicElement"
            },
            "chainable": 1,
            "class": "_basicElement",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 734,
            "description": "Transposes the getter data to a field attached to this instance",
            "itemtype": "method",
            "name": "normalize",
            "chainable": 1,
            "class": "_basicElement",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 752,
            "description": "Gathers all elements that this instance depends on",
            "itemtype": "method",
            "name": "getLinksTo",
            "return": {
                "description": "All elements that this node references TO",
                "type": "Array"
            },
            "class": "_basicElement",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 762,
            "description": "Gathers all dependecies/linked elements related to this instance",
            "itemtype": "method",
            "name": "getLinksFrom",
            "return": {
                "description": "All elements that this node references from",
                "type": "Array"
            },
            "class": "_basicElement",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 772,
            "description": "Removes the link to this element from another Raska element",
            "itemtype": "method",
            "name": "removeLinkFrom",
            "params": [
                {
                    "name": "element",
                    "description": "Element that will have its link from this element removed",
                    "type": "_basicElement"
                }
            ],
            "return": {
                "description": "Updated Raska element reference",
                "type": "_basicElement"
            },
            "chainable": 1,
            "class": "_basicElement",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 788,
            "description": "Removes every and each link that references this element",
            "itemtype": "method",
            "name": "clearAllLinks",
            "return": {
                "description": "Updated Raska element reference",
                "type": "_basicElement"
            },
            "chainable": 1,
            "class": "_basicElement",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 801,
            "description": "Gathers all child elements from this node",
            "itemtype": "method",
            "name": "getChildElements",
            "return": {
                "description": "All child elements",
                "type": "Array"
            },
            "class": "_basicElement",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 811,
            "description": "Adds a new child element to this node",
            "itemtype": "method",
            "name": "addChild",
            "params": [
                {
                    "name": "child",
                    "description": "Element that will be added to the child array into this element",
                    "type": "_basicElement"
                }
            ],
            "return": {
                "description": "Updated Raska element reference",
                "type": "_basicElement"
            },
            "chainable": 1,
            "class": "_basicElement",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 825,
            "description": "Get the parent node to this element",
            "itemtype": "method",
            "name": "getParent",
            "return": {
                "description": "Reference to de parent node (null if none)",
                "type": "_basicElement"
            },
            "class": "_basicElement",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 835,
            "description": "Retrieves the element boundaries information",
            "itemtype": "method",
            "name": "getBoundaries",
            "return": {
                "description": "Data regarding x, y, minX and minY from this element",
                "type": "Object"
            },
            "class": "_basicElement",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 850,
            "description": "Sets the parent node to this element",
            "itemtype": "method",
            "name": "setParent",
            "params": [
                {
                    "name": "parent",
                    "description": "Element that will be added as a parent to this element",
                    "type": "_basicElement"
                }
            ],
            "return": {
                "description": "Updated Raska element reference",
                "type": "_basicElement"
            },
            "chainable": 1,
            "class": "_basicElement",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 863,
            "description": "Details regarding this element' border",
            "itemtype": "attribute",
            "name": "border",
            "class": "_basicElement",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 869,
            "description": "Element border color",
            "itemtype": "property",
            "name": "color",
            "type": "String",
            "default": "null",
            "class": "_basicElement",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 878,
            "description": "Whether or not a border should be rendered",
            "itemtype": "property",
            "name": "active",
            "type": "Bool",
            "default": "false",
            "class": "_basicElement",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 887,
            "description": "Border width",
            "itemtype": "property",
            "name": "width",
            "type": "Number",
            "default": "0",
            "class": "_basicElement",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 897,
            "description": "Element position type",
            "itemtype": "property",
            "name": "position",
            "type": "_positionTypes",
            "default": "_positionTypes.relative",
            "class": "_basicElement",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 906,
            "description": "Element x position",
            "itemtype": "property",
            "name": "x",
            "type": "Number",
            "default": "50",
            "class": "_basicElement",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 915,
            "description": "Element y position",
            "itemtype": "property",
            "name": "y",
            "type": "Number",
            "default": "50",
            "class": "_basicElement",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 924,
            "description": "Gathers adjusted x/y coordinates for the currente element taking into consideration \nthe type of positining set to it and wheter or not a parent node is present",
            "itemtype": "method",
            "name": "getAdjustedCoordinates",
            "return": {
                "description": "Adjusted coordinates",
                "type": "X:Number,y:Number"
            },
            "class": "_basicElement",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 942,
            "description": "Whether or not this element handle event interactions",
            "itemtype": "property",
            "name": "canHandleEvents",
            "type": "bool",
            "default": "false",
            "class": "_basicElement",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 963,
            "description": "Triggered whenever a click iteraction occurs within the boundaries of this element.\n - This event is only supported on selected elements. Check for the *canHandleEvents*\n   property value before relying on this delegate",
            "itemtype": "method",
            "name": "click",
            "params": [
                {
                    "name": "x",
                    "description": "Element's current X position",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "Element's current Y position",
                    "type": "Number"
                },
                {
                    "name": "ele",
                    "description": "The element that was clicked",
                    "type": "_basicElement"
                },
                {
                    "name": "evt",
                    "description": "Event that triggered the delegate",
                    "type": "Event"
                }
            ],
            "chainable": 1,
            "class": "_basicElement",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 1003,
            "description": "[ABSTRACT] Adjusts the position of the current element taking in consideration it's parent \npositioning constraints",
            "itemtype": "method",
            "name": "adjustPosition",
            "params": [
                {
                    "name": "newX",
                    "description": "X position",
                    "type": "Number"
                },
                {
                    "name": "newY",
                    "description": "Y position",
                    "type": "Number"
                }
            ],
            "chainable": 1,
            "class": "_basicElement",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 1017,
            "description": "[ABSTRACT] Sets the current width for this element",
            "itemtype": "method",
            "name": "setWidth",
            "params": [
                {
                    "name": "newWidth",
                    "description": "The width for this element",
                    "type": "Number"
                }
            ],
            "chainable": 1,
            "throws": {
                "description": "Not implemented",
                "type": "_defaultConfigurations.errors.notImplementedException"
            },
            "class": "_basicElement",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 1030,
            "description": "[ABSTRACT] Gets the current width for this element",
            "itemtype": "method",
            "name": "getWidth",
            "return": {
                "description": "The width of this element",
                "type": "Number"
            },
            "throws": {
                "description": "Not implemented",
                "type": "_defaultConfigurations.errors.notImplementedException"
            },
            "class": "_basicElement",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 1043,
            "description": "[ABSTRACT] Sets the current Height for this element",
            "itemtype": "method",
            "name": "setHeight",
            "params": [
                {
                    "name": "newHeight",
                    "description": "The height for this element",
                    "type": "Number"
                }
            ],
            "chainable": 1,
            "throws": {
                "description": "Not implemented",
                "type": "_defaultConfigurations.errors.notImplementedException"
            },
            "class": "_basicElement",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 1056,
            "description": "[ABSTRACT] Gets the current Height for this element",
            "itemtype": "method",
            "name": "getHeight",
            "return": {
                "description": "The Height of this element",
                "type": "Number"
            },
            "throws": {
                "description": "Not implemented",
                "type": "_defaultConfigurations.errors.notImplementedException"
            },
            "class": "_basicElement",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 1069,
            "description": "[ABSTRACT] Whether or not this element existis withing the boudaries of \nthe given x/y coordinates",
            "itemtype": "method",
            "name": "existsIn",
            "params": [
                {
                    "name": "x",
                    "description": "X Coordinate",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "Y Coordinate",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "If this element is contained within the X/Y coordinates",
                "type": "Bool"
            },
            "throws": {
                "description": "Not implemented",
                "type": "_defaultConfigurations.errors.notImplementedException"
            },
            "class": "_basicElement",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 1084,
            "description": "[ABSTRACT] Whether or not this element existis withing the boudaries of \nthe given x/y coordinates",
            "itemtype": "method",
            "name": "existsIn",
            "params": [
                {
                    "name": "The",
                    "description": "Canvas element",
                    "type": "HTMLElement|Node"
                },
                {
                    "name": "tdContext",
                    "description": "Canvas' 2d context",
                    "type": "Node"
                }
            ],
            "throws": {
                "description": "Not implemented",
                "type": "_defaultConfigurations.errors.notImplementedException"
            },
            "class": "_basicElement",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 1110,
            "description": "Raska's default configuration data",
            "itemtype": "property",
            "name": "library",
            "static": 1,
            "final": 1,
            "class": "_basicElement",
            "module": "raska",
            "submodule": "_defaultConfigurations"
        },
        {
            "file": "src\\raska.js",
            "line": 1123,
            "description": "Raska's exception types",
            "itemtype": "property",
            "name": "errors",
            "static": 1,
            "final": 1,
            "class": "_basicElement",
            "module": "raska",
            "submodule": "_defaultConfigurations"
        },
        {
            "file": "src\\raska.js",
            "line": 1653,
            "description": "Holds the elements that are to be drawn to the target canvas",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_elements",
            "type": "Array",
            "default": "[]",
            "class": "_drawing",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 1663,
            "description": "Whether or not we have a timer running",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_timerRunning",
            "type": "Bool",
            "default": "false",
            "class": "_drawing",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 1673,
            "description": "The Canvas element we're targeting",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_canvas",
            "type": "HTMLElement",
            "default": "null",
            "class": "_drawing",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 1683,
            "description": "The Canvas element (wraped by a Raska _basicElement)",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_canvasElement",
            "type": "_basicElement",
            "default": "null",
            "class": "_drawing",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 1693,
            "description": "The 2dContext from the canvas element we're targeting",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_2dContext",
            "type": "Object",
            "default": "null",
            "class": "_drawing",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 1703,
            "description": "Handles the periodic draw of the elements in this Raska instance",
            "itemtype": "method",
            "name": "_timedDrawing",
            "access": "private",
            "tagname": "",
            "class": "_drawing",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 1718,
            "description": "Plots the element itself and all its related nodes into the canvas",
            "itemtype": "method",
            "name": "_drawAllIn",
            "params": [
                {
                    "name": "element",
                    "description": "The element being drawn to the canvas",
                    "type": "_basicElement"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "_drawing",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 1744,
            "description": "Gets mouses's X position relative to the current canvas",
            "itemtype": "method",
            "name": "getX",
            "params": [
                {
                    "name": "evt",
                    "description": "Event we're bubbling in",
                    "type": "Event"
                }
            ],
            "return": {
                "description": "X value",
                "type": "Number"
            },
            "static": 1,
            "class": "_mouse",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 1757,
            "description": "Gets mouses's Y position relative to the current canvas",
            "itemtype": "method",
            "name": "getY",
            "params": [
                {
                    "name": "evt",
                    "description": "Event we're bubbling in",
                    "type": "Event"
                }
            ],
            "return": {
                "description": "Y value",
                "type": "Number"
            },
            "static": 1,
            "class": "_mouse",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 1783,
            "description": "Gets mouses' X and Y positions relative to the current canvas",
            "itemtype": "method",
            "name": "getXY",
            "return": {
                "description": "X and Y values",
                "type": "Object"
            },
            "static": 1,
            "class": "_mouse",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 1815,
            "description": "The element being draged",
            "itemtype": "property",
            "name": "reference",
            "type": "_basicElement",
            "default": "null",
            "static": 1,
            "class": "_elementBeingDraged",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 1826,
            "description": "Whether or not the user is holding the CTRL key",
            "itemtype": "property",
            "name": "holdingCTRL",
            "type": "Bool",
            "default": "false",
            "static": 1,
            "class": "_elementBeingDraged",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 1837,
            "description": "A copy from the original border specification for the element being draged",
            "itemtype": "property",
            "name": "originalBorder",
            "type": "Object",
            "default": "{}",
            "static": 1,
            "class": "_elementBeingDraged",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 1848,
            "description": "The types of drag that can be applied to an element\n\nIt can be either: \n     1 - moving\n     3 - linking",
            "itemtype": "attribute",
            "name": "dragTypes",
            "class": "_elementBeingDraged",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 1876,
            "description": "Default drag type",
            "itemtype": "property",
            "name": "dragType",
            "type": "Number",
            "default": "0",
            "static": 1,
            "class": "_elementBeingDraged",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 1891,
            "description": "Whenever possible/necessary it plots the linking arrow to the canvas",
            "itemtype": "method",
            "name": "tryRender",
            "access": "private",
            "tagname": "",
            "class": "_elementBeingDraged",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 1928,
            "description": "Handles de mouse move envent",
            "itemtype": "method",
            "name": "_whenMouseMove",
            "params": [
                {
                    "name": "evt",
                    "description": "Event we're bubbling in",
                    "type": "Event"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "_drawing",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 1946,
            "description": "Handles de mouse up envent",
            "itemtype": "method",
            "name": "_whenMouseUp",
            "params": [
                {
                    "name": "evt",
                    "description": "Event we're bubbling in",
                    "type": "Event"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "_drawing",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 1977,
            "description": "Removes a given element from the canvas",
            "itemtype": "method",
            "name": "_removeElement",
            "params": [
                {
                    "name": "e",
                    "description": "Element that is to be removed",
                    "type": "_basicElement"
                }
            ],
            "access": "private",
            "tagname": "",
            "chainable": 1,
            "class": "_drawing",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 1992,
            "description": "Adds a given element from the canvas",
            "itemtype": "method",
            "name": "_addElement",
            "params": [
                {
                    "name": "e",
                    "description": "Element that is to be added",
                    "type": "_basicElement"
                }
            ],
            "access": "private",
            "tagname": "",
            "chainable": 1,
            "class": "_drawing",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 2006,
            "description": "Handles de key up envent",
            "itemtype": "method",
            "name": "_whenKeyUp",
            "params": [
                {
                    "name": "evt",
                    "description": "Event we're bubbling in",
                    "type": "Event"
                }
            ],
            "access": "private",
            "tagname": "",
            "chainable": 1,
            "class": "_drawing",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 2019,
            "description": "Handles de key down envent",
            "itemtype": "method",
            "name": "_whenKeyDown",
            "params": [
                {
                    "name": "evt",
                    "description": "Event we're bubbling in",
                    "type": "Event"
                }
            ],
            "access": "private",
            "tagname": "",
            "chainable": 1,
            "class": "_drawing",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 2039,
            "description": "Handles the click event",
            "itemtype": "method",
            "name": "_checkClick",
            "params": [
                {
                    "name": "evt",
                    "description": "Event we're bubbling in",
                    "type": "Event"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "_drawing",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 2083,
            "description": "Plots each and every element to the canvas and registers all the event handlers delegates",
            "itemtype": "method",
            "name": "_draw",
            "access": "private",
            "tagname": "",
            "chainable": 1,
            "class": "_drawing",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 2126,
            "description": "Gathers all elements being ploted to the canvas and organizes it as a directed graph JSON",
            "itemtype": "method",
            "name": "_getElementsSlim",
            "return": {
                "description": "Graph node information",
                "type": "_graphNodeInfo"
            },
            "access": "private",
            "tagname": "",
            "class": "_drawing",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 2160,
            "description": "Add a given element to the drawing elements array",
            "itemtype": "method",
            "name": "addElement",
            "params": [
                {
                    "name": "element",
                    "description": "The element to be drawn",
                    "type": "_basicElement"
                }
            ],
            "chainable": 1,
            "class": "_drawing",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 2172,
            "description": "Gets the canvas' dataURL",
            "itemtype": "method",
            "name": "getDataUrl",
            "class": "_drawing",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 2181,
            "description": "Gathers all elements being ploted to the canvas and organizes it as a directed graph JSON",
            "itemtype": "method",
            "name": "getElementsSlim",
            "return": {
                "description": "Graph node information",
                "type": "_graphNodeInfo"
            },
            "class": "_drawing",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 2191,
            "description": "Gathers all elements being ploted to the canvas",
            "itemtype": "method",
            "name": "getElements",
            "return": {
                "description": "Graph node information",
                "type": "_basicElement[]"
            },
            "class": "_drawing",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 2201,
            "description": "Redefines the elements that are supposed to be ploted to the canvas",
            "itemtype": "method",
            "name": "reloadUsing",
            "params": [
                {
                    "name": "elements",
                    "description": "The elements that are going to be ploted",
                    "type": "_basicElements[]"
                }
            ],
            "static": 1,
            "chainable": 1,
            "class": "_drawing",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 2214,
            "description": "Returns the corresponding Raska Canvas element",
            "itemtype": "method",
            "name": "getCanvasElement",
            "class": "_drawing",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 2223,
            "description": "Initializes the drawing process",
            "itemtype": "method",
            "name": "initializeTimedDrawing",
            "class": "_drawing",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 2244,
            "description": "Adds a new Label to the target canvas",
            "itemtype": "method",
            "name": "newLabel",
            "return": {
                "description": "Copy of '_defaultConfigurations.label' object",
                "type": "_defaultConfigurations.label"
            },
            "static": 1,
            "class": "_public",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 2255,
            "description": "Adds a new Square to the target canvas",
            "itemtype": "method",
            "name": "newSquare",
            "return": {
                "description": "Copy of '_defaultConfigurations.square' object",
                "type": "_defaultConfigurations.square"
            },
            "static": 1,
            "class": "_public",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 2267,
            "description": "Adds a new Triangle to the target canvas",
            "itemtype": "method",
            "name": "newTriangle",
            "return": {
                "description": "Copy of '_defaultConfigurations.triangle' object",
                "type": "_defaultConfigurations.square"
            },
            "static": 1,
            "class": "_public",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 2278,
            "description": "Adds a new Circle to the target canvas",
            "itemtype": "method",
            "name": "newCircle",
            "return": {
                "description": "Copy of '_defaultConfigurations.circle' object",
                "type": "_defaultConfigurations.circle"
            },
            "static": 1,
            "class": "_public",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 2289,
            "description": "Plots an element to the canvas",
            "itemtype": "method",
            "name": "plot",
            "return": {
                "description": "Reference to the '_public' pointer",
                "type": "_public"
            },
            "static": 1,
            "chainable": 1,
            "class": "_public",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 2302,
            "description": "Exports current canvas data as an image to a new window",
            "itemtype": "method",
            "name": "exportImage",
            "return": {
                "description": "Reference to the '_public' pointer",
                "type": "_public"
            },
            "chainable": 1,
            "static": 1,
            "class": "_public",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 2316,
            "description": "Retrieves the directed graph represented by the elements in the canvas",
            "itemtype": "method",
            "name": "getElementsSlim",
            "return": {
                "description": "The JSON object that represents the current directed graph drawn to the canvas",
                "type": "Json"
            },
            "static": 1,
            "class": "_public",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 2327,
            "description": "Retrieves the ENTIRE directed graph represented by the elements in the canvas",
            "itemtype": "method",
            "name": "getElementsData",
            "return": {
                "description": "The stringfied JSON that represents the current directed graph drawn to the canvas",
                "type": "String"
            },
            "static": 1,
            "class": "_public",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 2338,
            "description": "Redefines the elements that are supposed to be ploted to the canvas",
            "itemtype": "method",
            "name": "loadElementsFrom",
            "params": [
                {
                    "name": "source",
                    "description": "The elements that are going to be ploted",
                    "type": "_basicElements[]"
                }
            ],
            "static": 1,
            "chainable": 1,
            "class": "_public",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 2409,
            "description": "Retrieves all possible position types",
            "itemtype": "property",
            "name": "positionTypes",
            "type": "_positionTypes",
            "static": 1,
            "class": "_public",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 2420,
            "description": "Configures the Raska library to target a given canvas using the configuration passed\nas a parameter",
            "itemtype": "method",
            "name": "installUsing",
            "params": [
                {
                    "name": "configuration",
                    "description": "Configuration data that should be used to configure this Raska instance",
                    "type": "_defaultConfigurations.library"
                }
            ],
            "return": {
                "description": "Reference to the '_public' pointer",
                "type": "_public"
            },
            "static": 1,
            "chainable": 1,
            "class": "_public",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 2436,
            "description": "Registers a handler to be trigered by any interaction taken place against the canvas",
            "itemtype": "method",
            "name": "onElementInteraction",
            "params": [
                {
                    "name": "iteractionType",
                    "description": "When to trigger the iteraction handler",
                    "type": "String"
                },
                {
                    "name": "trigger",
                    "description": "What to do whenever an element iteraction happens",
                    "type": "Function"
                }
            ],
            "static": 1,
            "chainable": 1,
            "class": "_public",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 2450,
            "description": "Gathers the target canvas boundaries",
            "itemtype": "method",
            "name": "getCanvasBoundaries",
            "static": 1,
            "return": {
                "description": "",
                "type": "MaxW:number, maxH:number"
            },
            "class": "_public",
            "module": "raska"
        },
        {
            "file": "src\\raska.js",
            "line": 2462,
            "description": "Clears all elements from the canvas",
            "itemtype": "method",
            "name": "clear",
            "static": 1,
            "chainable": 1,
            "class": "_public",
            "module": "raska"
        }
    ],
    "warnings": [
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\raska.js:58"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\raska.js:180"
        },
        {
            "message": "replacing incorrect tag: function with method",
            "line": " src\\raska.js:963"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\raska.js:2126"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\raska.js:2181"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " src\\raska.js:2191"
        }
    ]
}